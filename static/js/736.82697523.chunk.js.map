{"version":3,"file":"static/js/736.82697523.chunk.js","mappings":"wNA6CA,UAzCsB,WACpB,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACMC,GAASC,EAAAA,EAAAA,MAkBf,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,gHAEUC,EAAAA,EAAAA,IAAUJ,EAAOK,SAF3B,iBAERC,EAFQ,EAERA,WAENT,EAAWS,GACXP,GAAa,IALC,gDAQhBQ,QAAQC,MAAR,MACAT,GAAa,GATG,yDAAH,qDAYjBI,GACD,GAAE,CAACH,EAAOK,WAGT,8BACGP,GACC,sCACqB,IAAnBF,EAAQa,QACV,yDAEA,yBACGb,EAAQc,KAAI,SAAAC,GAAM,OACjB,4BACE,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFHF,EAAOG,GADA,OAU5B,C","sources":["pages/Reviews.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { GetReview } from 'Api/Api';\n\nconst ReviewDetails = () => {\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const params = useParams();\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        const { results } = await GetReview(params.movieId);\n        if (results) {\n          setReviews(results);\n          setIsLoading(false);\n        }\n      } catch (error) {\n        console.error(error);\n        setIsLoading(false);\n      }\n    };\n    fetchMovies();\n  }, [params.movieId]);\n\n  return (\n    <>\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : reviews.length === 0 ? (\n        <p>Movie does not have a review</p>\n      ) : (\n        <div>\n          {reviews.map(review => (\n            <div key={review.id}>\n              <h2>Author:{review.author}</h2>\n              <p>{review.content}</p>\n            </div>\n          ))}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ReviewDetails;"],"names":["useState","reviews","setReviews","isLoading","setIsLoading","params","useParams","useEffect","fetchMovies","GetReview","movieId","results","console","error","length","map","review","author","content","id"],"sourceRoot":""}